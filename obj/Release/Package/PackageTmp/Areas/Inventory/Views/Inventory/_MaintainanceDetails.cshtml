@model LIMS_DEMO.Areas.Inventory.Models.InventoryMaintainanceAndCalibrationModel
<div class="pd-20 card-box mb-30">
    <div class="clearfix">
        <div class="pull-left">
            <h4 class="text-blue h4">Maintainance  Details </h4>
            <p class="mb-30"></p>
        </div>
    </div>
    <br />
    <div class="pb-20">
        <div class="wizard-content">
            @*@using (Html.BeginForm("InventoryMaintainanceAndCalibrationDetails", "Inventory", FormMethod.Post, new { id = "_Maintainance" }))*@
            @using (Ajax.BeginForm("InventoryMaintainanceAndCalibrationDetails", "Inventory", new AjaxOptions { HttpMethod = "POST", OnSuccess = "MaintainceSuccess" }, new { id = "_Maintainance" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.Hidden("MaintainanceID", (object)ViewBag.MaintainanceDetailsIdViewBag)
                @Html.Hidden("InventoryTypeMasterID", (object)ViewBag.InventoryTypeMasterIDViewBag)

                <section>
                    <div class="form-group row">
                        <label class="col-sm-12 col-md-2 col-form-label">Basic Item Details Code: </label>
                        <div class="col-sm-4">
                            @Html.DropDownListFor(model => model.InventoryBasicItemDetailsID, new SelectList(ViewBag.InventoryItemListViewBag, "InventoryBasicItemDetailsID", "InventoryBasicItemDetailsNumber"), "---Select---", new { @class = " form-control" })
                            @Html.ValidationMessageFor(model => model.InventoryBasicItemDetailsID, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.InventoryBasicItemDetailsNumber)
                            @Html.HiddenFor(model => model.InventoryBasicItemDetailsID)
                        </div>
                        <label class="col-sm-12 col-md-2 col-form-label">Vendor Name:</label>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.AMCVendorName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AMCVendorName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-12 col-md-2 col-form-label">AMC Number:</label>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.AMCNumber, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AMCNumber, "", new { @class = "text-danger" })
                        </div>
                        <label class="col-sm-12 col-md-2 col-form-label">AMC Date:</label>
                        <div class="col-sm-4">
                            <input type="date" id="AMCDate" name="AMCDate" value="" class="form-control" />
                            <input type="text" id="AMCDateval" name="AMCDateval" value="" class="form-control" disabled />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-12 col-md-2 col-form-label">AMC Period(in months):</label>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.AMCPeriod, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AMCPeriod, "", new { @class = "text-danger" })
                        </div>
                        <label class="col-sm-12 col-md-2 col-form-label">Frequency:</label>
                        <div class="col-sm-4">
                            @Html.DropDownListFor(model => model.Frequency, (SelectList)ViewBag.FrequencyTypeListViewBag, "Select Frequency...", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Frequency, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-12 col-md-2 col-form-label">AMC Start Date:</label>
                        <div class="col-sm-4">
                            <input type="date" id="AMCStartDate" name="AMCStartDate" value="" class="form-control" />
                            <input type="text" id="AMCStartDateval" name="AMCStartDateval" value="" class="form-control" disabled />
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-sm-12 col-md-12">

                            <input type="submit" value="Save" class="btn btn-info btn-sm" id="buttonSaveInventoryMaintainanceDetails3" name="buttonSaveInventoryMaintainanceDetails" style="margin-left:89%" />
                            <input type="submit" value="Next" class="btn btn-info btn-sm" id="buttonNextToCalibration" name="buttonNextToCalibration" style="float:right" />
                        </div>
                    </div>
                </section>
            }
        </div>
    </div>
  
</div>
@*@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/unobtrusive")*@
<script type="text/javascript">
    function MaintainceSuccess(result) {
        if (result.status == 'success') {
            debugger;
            $("#MaintainanceID").val("");
            $("#InventoryCommercialDetailsID").val("");
            $("#InventoryBasicItemDetailsID").val(-1);
           // $("#AMCVendorName").val("");
            $("#AMCNumber").val("");
           // $("#AMCVendorName").val("");
            $("#AMCDate").val("");
            $("#AMCStartDate").val("");
            $("#AMCValue").val("");
            $("#AMCPeriod").val("");
            $("#AMCDateval").val("");
            $("#AMCStartDateval").val("");
            $("#Frequency").val(-1);
            alert('Data is Saved Successfully');

        }
        else {
            //alert(result.message);
            if (result.status == "fail") {
                alert('Error !!!');
            }
        }                                                                                                                                   
    }
</script>
@*<script type="text/javascript">

        function MaintainceSuccess(result) {
            if (result.status == 'success') {
                debugger;
                alert('Data is Saved Successfully');
            }
            else {
                //alert(result.message);
                if (result.status == "fail") {
                    alert('Error !!!');
                }
            }
        }
        $("#buttonSaveInventoryMaintainanceDetails3").on('click', function () {
            debugger;
            //if ($("#_Maintainance").valid() == true) {
            var data = {
                "InventoryBasicItemDetailsNumber": "",
                "InventoryBasicItemDetailsID": ""
            };
            data.InventoryBasicItemDetailsNumber = $("#InventoryBasicItemDetailsID  option:selected").text();
            data.InventoryBasicItemDetailsID = $("#InventoryBasicItemDetailsID option:selected").val();

            $.ajax({
                type: 'Post',
                url: "/Inventory/InventoryMaintainanceAndCalibration/CheckMaintainance",
                data: JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    onSuccessFatchSerialNumberList(data)
                },
                failure: function (data) {
                    onError()
                },
            });
            // }
        })
        $("#buttonNextToCalibration").on('click', function () {
            $("#tabHead_Calibration").attr("data-toggle", "tab");
            $("#tabHead_Calibration").trigger("click");
            //$("#CommercialDetailsID").val(data.ID);
        })
        $('#txtMaintainanceUploadFile').on('change', function (e) {
            debugger;
            files = e.target.files;
        })
        $('#buttonUploadMaintainanceFile').on('click', function (e) {
            debugger;
            $('#uploadedMaintenanceImagesContainer').html("");
            MaintainanceDetails.previewImages();
            var myID = $("#BasicDetailsID").val(); //uncomment this to make sure the ajax URL works
            if (MaintainanceDetails.files.length > 0) {
                if (window.FormData !== undefined) {
                    var data = new FormData();
                    for (var x = 0; x < MaintainanceDetails.files.length; x++) {
                        var fileName = MaintainanceDetails.files[x].name;
                        data.append(fileName, MaintainanceDetails.files[x]);
                    }
                    debugger;
                    //InventoryBasicDetail.FileUploadData = data;
                    $.ajax({
                        type: "POST",
                        url: applicationSystem.get_hostname() + '/Inventory/UploadMaintainanceAndCalibrationFile?id=' + myID + "&&Type=Maintainance",
                        contentType: false,
                        processData: false,
                        data: data,
                        success: function (result) {
                            //alert(MaintainanceDetails.uploadedFileName);
                            MaintainanceDetails.uploadedFileName = MaintainanceDetails.uploadedFileName + result;
                            console.log(MaintainanceDetails.uploadedFileName);
                        },
                        error: function (xhr, status, p3, p4) {
                            var err = "Error " + " " + status + " " + p3 + " " + p4;
                            if (xhr.responseText && xhr.responseText[0] == "{")
                                err = JSON.parse(xhr.responseText).Message;
                            console.log(err);
                        }
                    });
                } else {
                    alert("This browser doesn't support HTML5 file uploads!");
                }
            }
        })
        $("#InventoryBasicItemDetailsID").on("change", function () {
            debugger;
            if (parseInt($("#InventoryBasicItemDetailsID").val()) > 0) {
                fatchMaintainanceDetailsByBasicItemDetailsID();
            }
            else {

                //   $('#AMCVendorName').val("");
                $('#AMCNumber').val("");
                $('#AMCDate').val("");
                $('#AMCPeriod').val("");
                $('#Frequency').val(-1);
                $('#AMCStartDate').val("");
                $('#AMCDateval').val("");
                $('#AMCStartDateval').val("");
            }
        })
        function onSuccessFatchSerialNumberList(data) {
            debugger;
            if (data.status == "success") {
                if (data.data.length > 0) {
                    //if (parseFloat(data.data[0].InventoryBasicItemDetailsID) > 0) {
                    //    var dialog = BootstrapDialog.show({
                    //        type: BootstrapDialog.TYPE_WARNING,
                    //        title: 'Warning',
                    //        message: "Are you sure, you wants to update? After update old data will get delete !",
                    //        buttons: [
                    //            {
                    //                icon: 'glyphicon glyphicon-trash',
                    //                label: 'ReNew Inventory',
                    //                cssClass: 'btn-warning',
                    //                action: function () {
                    //                    dialog.close();
                    //                    updateMaintainanceDetails();

                    //                }
                    //            },
                    //            {
                    //                label: 'Close',
                    //                cssClass: 'btn-warning',
                    //                action: function (dialogRef) {

                    //                    dialogRef.close();
                    //                }
                    //            }
                    //        ]
                    //    });
                    //}
                }
                else {
                    addMaintainanceDetails();
                }
            }
            if (data.status == "fail") {
            }
        }
        function previewImages() {

            var fileList = this.files;

            var anyWindow = window.URL || window.webkitURL;
            $('#uploadedMaintenanceImagesContainer').html("");
            for (var i = 0; i < fileList.length; i++) {
                var $cloneRow = "";
                //get a blob to play with
                var objectUrl = anyWindow.createObjectURL(fileList[i]);
                // for the next line to work, you need something class="preview-area" in your html
                //$('#uploadedImagesContainer').append('<img src="' + objectUrl + '" />');
                $cloneRow = $cloneRow + '<div class="col-md-2" style="border-style:groove;"><div class="img-wrap"><a href="#" class="pop" onclick="SampleAndParameterDetails.slideshowImage(event);"><img src="' + objectUrl + '" style="height:100px; margin-left: -12px;" class="margin"/></a></div></div>';
                $('#uploadedMaintenanceImagesContainer').append($cloneRow);
                // get rid of the blob
                window.URL.revokeObjectURL(fileList[i]);
            }
            $("#uploadedMaintenanceImagesContainerDiv").css("display", "none");
            var data = {
                "message": "Image Uploaded Sucessfully!"
            };
            //applicationSystem.onSuccess(data);
            //$("#uploadedImagesContainerDiv").css("display", "block");
        }
        function setMaintenanceImages(data, path) {
            debugger;
            var SampleItems = [];
            SampleItems = data;
            var count = SampleItems.length;
            $('#uploadedMaintenanceImagesContainer').html("");
            var $cloneRow = "";
            for (i = 0; i < SampleItems.length; ++i) {
                $cloneRow = $cloneRow + '<div class="col-md-2" style="border-style:groove;"><div class="img-wrap"><a class="close clickEventClass" id="deleteMaintenanceImage_' + SampleItems[i].ID + '" onclick="MaintainanceDetails.deleteImage(event);">&times;</a><a href="#" class="pop" id="maintenanceImageAnkerID_' + SampleItems[i].ID + '" onclick="MaintainanceDetails.slideshowImage(event);"><img src="' + path + SampleItems[i].FileName + '" alt="..." class="margin" id="maintenanceImageID_' + SampleItems[i].ID + '" style="height:100px; margin-left: -12px;"></a></div></div>';
            }
            $('#uploadedMaintenanceImagesContainer').html($cloneRow);
            $("#uploadedMaintenanceImagesContainerDiv").css("display", "none");
        }
        function deleteImage(e) {
            var _id = e.target.id;
            var splitID = _id.split('_');
            SampleAndParameterDetails.deleteSampleImage(splitID[1]);
        }
        function slideshowImage(e) {
            debugger;
            var _id = e.target.id;
            var SplitID = _id.split("_");
            var src = $("#maintenanceImageID_" + SplitID[1]).attr('src');
            $('.imagepreview').attr('src', src);
            //$('.imagepreview').attr('src', $("#" + _id).find('img').attr('src'));
            $('#imagemodal').modal('show');
        }
        function addProposedDateRow() {
            debugger;
            counter = $('#myTableProposedDateBody tr:last').attr('id');
            if (typeof counter === "undefined") {
                $('#myTableProposedDateBody').html("");
                counter = 0;
            }
            else {
                counter = parseInt(counter) + 1;
            }
            var $cloneRow = "";
            $cloneRow = $cloneRow + '<tr id="' + counter + '" datatableID = "0" style="width:100%;">';
            $cloneRow = $cloneRow + '<td>' + (parseInt(counter) + 1) + '</td>';

            $cloneRow = $cloneRow + '<td><input type="text"id="ProposedDate_' + counter + '"   class="form-control OnlyDate" name="Mass_' + counter + '" style="width: 100%;" /></td>';
            $cloneRow = $cloneRow + '<td style="text-align: center;"><a href="#" title="Delete" id="rowDelete_' + counter + '" name="rowDelete_' + counter + '" style="width: 100%;"><span class="glyphicon glyphicon-remove-circle"></span></a></td>';
            $cloneRow = $cloneRow + '</tr>';

            $('#myTableProposedDateBody').append($cloneRow);

            $('.OnlyDate').datetimepicker({
                format: 'DD/MM/YYYY'
            });
        }
        function addMaintainanceDetails() {
            debugger;
            var data = getMaintainanceDetails();
               $.ajax({
                type: 'Post',
                url: "/Inventory/Inventory/InventoryMaintainanceAndCalibrationDetails",
                data: JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    // onSuccess(data)
                    MaintainceSuccess(result)
                },
                failure: function (data) {
                    onError()
                },
            });
        }
        function updateMaintainanceDetails() {
            debugger;
            var data = getMaintainanceDetails();
            // ajaxRequest.makeRequest('/Inventory/InventoryMaintainanceAndCalibrationDetails', "POST", data, MaintainanceDetails.onSuccess, MaintainanceDetails.onError);
            $.ajax({
                type: 'Post',
                url: "/Inventory/Inventory/InventoryMaintainanceAndCalibrationDetails",
                data: JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    // onSuccess(data)
                    MaintainceSuccess(result)
                },
                failure: function (data) {
                    onError()
                },
            });
        }
        function fatchMaintainanceDetailsByBasicItemDetailsID() {
            debugger;
            var data = {
                "Type": "Maintainance"
            };
            data.InventoryBasicItemDetailsID = $("#InventoryBasicItemDetailsID").val();
            // ajaxRequest.makeRequest('/Inventory/GetMaintainanceAndCalibrationScheduleByBasicItemDetailsID', "POST", data, MaintainanceDetails.onSuccessFatchMaintainanceDetailsByBasicItemDetailsID, MaintainanceDetails.onError);
            $.ajax({
                type: 'Post',
                url: "/Inventory/Inventory/GetMaintainanceAndCalibrationScheduleByBasicItemDetailsID",
                data: JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    onSuccess(data)
                },
                failure: function (data) {
                    onError()
                },
            });
        }
        function getMaintainanceDetails() {
            debugger;
            var data = {
                "ID": ""
            };
            //data.ID = $("#MaintainanceID").val();
            data.ID = ($("#MaintainanceID").val() == "") ? 0 : $("#MaintainanceID").val();
            data.InventoryCommercialDetailsID = $('#InventoryCommercialDetailsID').val();
            data.InventoryBasicItemDetailsID = $("#InventoryBasicItemDetailsID").val();
            data.AMCVendorName = $("#AMCVendorName").val();
            data.AMCNumber = $("#AMCNumber").val();
            data.AMCDate = new Date($("#AMCDate").val());
            //data.AMCDate = new Date(
            //                                     applicationSystem.convertionOfDateFormat(
            //                                     $("#AMCDate").val(),
            //                                     applicationSystem.aspectedFormat,
            //                                     applicationSystem.currentServerFormat,
            //                                     applicationSystem.aspectedServerSeparator,
            //                                     applicationSystem.currentServerSeparator
            //                                 ));
            data.AMCStartDate = new Date($("#AMCStartDate").val());
            //data.AMCStartDate = new Date(
            //                                   applicationSystem.convertionOfDateFormat(
            //                                   $("#AMCStartDate").val(),
            //                                   applicationSystem.aspectedFormat,
            //                                   applicationSystem.currentServerFormat,
            //                                   applicationSystem.aspectedServerSeparator,
            //                                   applicationSystem.currentServerSeparator
            //                               ));
            data.AMCValue = $("#AMCValue").val();
            data.AMCPeriod = $("#AMCPeriod").val();
            data.Frequency = $("#Frequency").val();
            data.Type = "Maintainance";
            //data.UploadedFileNames = MaintainanceDetails.uploadedFileName + ",";
            return data;
        }
        function onSuccess(data) {
            if (data.status == "success") {
                //  applicationSystem.onSuccess(data);
                $("#MaintainanceID").val("");
                $("#InventoryCommercialDetailsID").val("");
                $("#InventoryBasicItemDetailsID").val(-1).change();
                //$("#AMCVendorName").val("");
                $("#AMCNumber").val("");
                // $("#AMCVendorName").val("");
                $("#AMCDate").val("");
                $("#AMCStartDate").val("");
                $("#AMCValue").val("");
                $("#AMCPeriod").val("");
                $("#AMCDateval").val("");
                $("#AMCStartDateval").val("");
                $("#Frequency").val(-1).change();
                data.UploadedFileNames = null;
                $("#txtMaintainanceUploadFile").val("");
                $('#uploadedMaintenanceImagesContainer').html("");
                $("#uploadedMaintenanceImagesContainerDiv").css("display", "none");
                //var url = applicationSystem.get_hostname() + "/Inventory/List";
                //window.location.href = url;
            }
            if (data.status == "fail") {
                applicationSystem.onError(data);
            }
        }

        function onSuccessFatchMaintainanceDetailsByBasicItemDetailsID(data) {
            debugger;
            if (data.status == "success") {

                if (data != null) {

                    $("#AMCVendorName").val(data.InventoryMaintainanceAndCalibrationScheduleDetails[0].AMCVendorName);
                    $("#AMCNumber").val(data.InventoryMaintainanceAndCalibrationScheduleDetails[0].AMCNumber);

                    var newdate = data.InventoryMaintainanceAndCalibrationScheduleDetails[0].AMCDate;
                    var dateString = newdate.toString().substr(6);
                    var currentTime = new Date(parseInt(dateString));
                    var month = currentTime.getMonth() + 1;
                    var day = currentTime.getDate();
                    var year = currentTime.getFullYear();
                    if (parseInt(month) < 10) {
                        month = "0" + month;
                    }
                    if (parseInt(day) < 10) {
                        day = "0" + day;
                    }
                    ReceivedDate = day + "/" + month + "/" + year;
                    $("#AMCDate").val(ReceivedDate);
                    $("#AMCDateval").val(ReceivedDate);

                    if (data.InventoryMaintainanceAndCalibrationScheduleDetails[0].AMCStartDate != null) {
                        var newdate1 = data.InventoryMaintainanceAndCalibrationScheduleDetails[0].AMCStartDate;
                        var dateString1 = newdate1.toString().substr(6);
                        var currentTime1 = new Date(parseInt(dateString1));
                        var month1 = currentTime1.getMonth() + 1;
                        var day1 = currentTime1.getDate();
                        var year1 = currentTime1.getFullYear();
                        if (parseInt(month1) < 10) {
                            month1 = "0" + month1;
                        }
                        if (parseInt(day1) < 10) {
                            day1 = "0" + day1;
                        }
                        ReceivedDate1 = day1 + "/" + month1 + "/" + year1;
                        $("#AMCStartDate").val(ReceivedDate1);
                        $("#AMCStartDateval").val(ReceivedDate1);
                    }

                    if (data.InventoryMaintainanceAndCalibrationScheduleDetails[0].ListFiles != null) {
                        var path = data.ImagePath;
                        var url = window.location.href;
                        var serverName = applicationSystem.get_hostname();
                        var full_Url = serverName + path;
                        setMaintenanceImages(data.InventoryMaintainanceAndCalibrationScheduleDetails[0].ListFiles, full_Url);
                    }

                    $("#AMCValue").val(data.InventoryMaintainanceAndCalibrationScheduleDetails[0].AMCValue);
                    $("#AMCPeriod").val(data.InventoryMaintainanceAndCalibrationScheduleDetails[0].AMCPeriod);
                    $("#Frequency").val(data.InventoryMaintainanceAndCalibrationScheduleDetails[0].Frequency).change();
                }
                else {

                }
            }
            else if (data.status == "info") {
                //applicationSystem.onError(data);
                // $('#AMCVendorName').val("");
                $('#AMCNumber').val("");
                $('#AMCDate').val("");
                $('#AMCPeriod').val("");
                $('#Frequency').val(-1).change();
                $('#AMCStartDate').val("");
                $("#AMCDateval").val("");
                $("#AMCStartDateval").val("");
            }
            else if (data.status == "fail") {
                applicationSystem.onError(data);
            }
        }

        function onError(data) {
            applicationSystem.onError(data);
        }
    </script>*@
@* @using (Ajax.BeginForm("InventoryMaintainanceAndCalibrationDetails", "Inventory", new AjaxOptions { HttpMethod = "POST", OnSuccess = "MaintainceSuccess" }, new { id = "_Maintainance" }))*@
