@model LIMS_DEMO.Areas.Inventory.Models.InventoryCommercialDetailModel
<div class="pd-20 card-box mb-30">
    <div class="clearfix">
        <div class="pull-left">
            <h4 class="text-blue h4">Commercial Details </h4>
        </div>
    </div>
    <br />
    <div class="pb-20">
        <div class="wizard-content">
            @using (Html.BeginForm("InventoryCommercialDetails", "Inventory", FormMethod.Post, new { id = "_CommercialDetails" }))
            {
                @Html.AntiForgeryToken()
                @*@Html.ValidationSummary(true)*@
                @Html.Hidden("CommercialDetailsID", (object)ViewBag.CommercialDetailsIdViewBag)
                @Html.Hidden("PurchaseRequestID", (object)ViewBag.PurchaseRequestId)
                @Html.Hidden("InventoryTypeMasterID", (object)ViewBag.InventoryTypeMasterIDViewBag)
                @Html.HiddenFor(model => model.PurchaseRequestID)

                <section>
                    <div class="form-group row">
                        <label class="col-sm-12 col-md-2 col-form-label">Supplier Name:</label>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.VendorName, null, new { @class = "form-control", @style = "font-size:13px;" })
                            @Html.ValidationMessageFor(model => model.VendorName)
                        </div>
                        <label class="col-sm-12 col-md-2 col-form-label">Purchase Order Number:</label>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.PurchaseOrderNumber, new { @class = "form-control", @style = "font-size:13px;" })
                            @Html.ValidationMessageFor(model => model.PurchaseOrderNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-12 col-md-2 col-form-label">Purchase Order Date:</label>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.PurchaseOrderDate, new { @class = "form-control", @style = "font-size:13px;" })
                            @Html.ValidationMessageFor(model => model.PurchaseOrderDate, "", new { @class = "text-danger" })
                        </div>
                        <label class="col-sm-12 col-md-2 col-form-label">Purchase Order Value:</label>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.PurchaseOrderValue, new { @class = "form-control", @style = "font-size:13px;", })
                            @Html.ValidationMessageFor(model => model.PurchaseOrderValue, "", new { @class = "text-danger" })
                            @*function onlyNumberKey(evt) {

                            // Only ASCII charactar in that range allowed
                            var ASCIICode = (evt.which) ? evt.which : evt.keyCode
                            if (ASCIICode > 31 && (ASCIICode < 48 || ASCIICode > 57))
                            return false;
                            return true;
                            }*@
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-12 col-md-2 col-form-label">Date Of Receiving:</label>
                        <div class="col-sm-4">
                            <input type="date" id="PurchaseDate" name="PurchaseDate" value="" class="form-control" style="font-size:13px" />
                            <input type="text" id="PurchaseDateval" name="PurchaseDateval" value="" class="form-control" disabled style="font-size:13px" />
                        </div>
                        <label class="col-sm-12 col-md-2 col-form-label">Delivery Time(Days):</label>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.DeliveryTime, new { @class = "form-control", @style = "font-size:13px;" })
                            @Html.ValidationMessageFor(model => model.DeliveryTime, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-12 col-md-2 col-form-label">Delivery Challan No:</label>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.DeliveryChallanNo, new { @class = "form-control", @style = "font-size:13px;" })
                            @Html.ValidationMessageFor(model => model.DeliveryChallanNo, "", new { @class = "text-danger" })
                        </div>
                        <label class="col-sm-12 col-md-2 col-form-label">Delivery Challan Date:</label>
                        <div class="col-sm-4">
                            <input type="date" id="DeliveryChallanDate" name="DeliveryChallanDate" value="" class="form-control" style="font-size:13px" />
                            <input type="text" id="DeliveryChallanDateval" name="DeliveryChallanDateval" value="" class="form-control" style="font-size:13px" disabled />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-12 col-md-2 col-form-label">Bill No:</label>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.InvoiceNumber, new { @class = "form-control", @style = "font-size:13px;" })
                            @Html.ValidationMessageFor(model => model.InvoiceNumber, "", new { @class = "text-danger" })
                        </div>
                        <label class="col-sm-12 col-md-2 col-form-label">Bill Date:</label>
                        <div class="col-sm-4">
                            <input type="date" id="BillDate" name="BillDate" value="" class="form-control" style="font-size:13px;" />
                            <input type="text" id="BillDateval" name="BillDateval" value="" class="form-control" disabled style="font-size:13px;" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-sm-12 col-md-12">
                            <input type="submit" value="Save" class="btn btn-info btn-sm" id="buttonSaveInventoryCommercialDetails2" name="buttonSaveInventoryCommercialDetails" style="float:right" />
                        </div>
                    </div>
                </section>
            }
        </div>
    </div>
    <!-- success Popup html Start -
    <!-- success Popup html End -->
</div>
@*@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/unobtrusive")*@
@*<script type="text/javascript">

    $("#buttonSaveInventoryCommercialDetails").on('click', function () {
        debugger;
        addInventoryCommercialDetails();
        return false;
    });
    $("#buttonNextToMaintainanceAndCalibration").on('click', function () {
        $("#tabHead_Maintainance").attr("data-toggle", "tab");
        $("#tabHead_Maintainance").trigger("click");
        //$("#CommercialDetailsID").val(data.ID);
        //$("#add_new_item_li").css("display", "none");
        fatchInventoryBasicItemDetailByCommercialID();
    });
    $('#txtUploadFile').on('change', function (e) {

       files = e.target.files;
    });
    $('#buttonUploadCommercialFile').on('click', function (e) {

        $('#uploadedCommercialImagesContainer').html("");
        InventoryCommercialDetails.previewImages();
        var myID = $("#BasicDetailsID").val(); //uncomment this to make sure the ajax URL works
        if (InventoryCommercialDetails.files.length > 0) {
            if (window.FormData !== undefined) {
                var data = new FormData();
                for (var x = 0; x < InventoryCommercialDetails.files.length; x++) {
                    var fileName = InventoryCommercialDetails.files[x].name;
                    data.append(fileName, InventoryCommercialDetails.files[x]);
                }

                InventoryBasicDetail.FileUploadData = data;
                $.ajax({
                    type: "POST",
                    url: applicationSystem.get_hostname() + '/Inventory/UploadCommercialFile?id=' + myID,
                    contentType: false,
                    processData: false,
                    data: data,
                    success: function (result) {

                        console.log(result.imageName);
                        console.log(result.imagePath);

                        console.log(result);
                        var _data = {
                            "message": result
                        };
                        applicationSystem.onSuccess(_data);
                    },
                    error: function (xhr, status, p3, p4) {
                        var err = "Error " + " " + status + " " + p3 + " " + p4;
                        if (xhr.responseText && xhr.responseText[0] == "{")
                            err = JSON.parse(xhr.responseText).Message;
                        console.log(status);
                        console.log(xhr);
                        console.log(err);
                    }
                });
            } else {
                alert("This browser doesn't support HTML5 file uploads!");
            }
        }
    });
    function previewImages() {

        var fileList = this.files;

        var anyWindow = window.URL || window.webkitURL;
        $('#uploadedCommercialImagesContainer').html("");
        for (var i = 0; i < fileList.length; i++) {
            var $cloneRow = "";
            //get a blob to play with
            var objectUrl = anyWindow.createObjectURL(fileList[i]);
            // for the next line to work, you need something class="preview-area" in your html
            //$('#uploadedImagesContainer').append('<img src="' + objectUrl + '" />');
            $cloneRow = $cloneRow + '<div class="col-md-2" style="border-style:groove;"><div class="img-wrap"><a href="#" class="pop" onclick="InventoryCommercialDetails.slideshowImage(event);"><img src="' + objectUrl + '" style="height:100px; margin-left: -12px;" class="margin"/></a></div></div>';
            $('#uploadedCommercialImagesContainer').append($cloneRow);
            // get rid of the blob
            window.URL.revokeObjectURL(fileList[i]);
        }
        var data = {
            "message": "Image Uploaded Sucessfully!"
        };
        applicationSystem.onSuccess(data);
        //$("#uploadedImagesContainerDiv").css("display", "block");   
    }
    function setCommercialImages(data, path) {
        debugger;
        var SampleItems = [];
        SampleItems = data;
        var count = SampleItems.length;
        $('#uploadedCommercialImagesContainer').html("");
        var $cloneRow = "";
        for (i = 0; i < SampleItems.length; ++i) {
            $cloneRow = $cloneRow + '<div class="col-md-2" style="border-style:groove;"><div class="img-wrap"><a class="close clickEventClass" id="deletecommercialImage_' + SampleItems[i].ID + '" onclick="InventoryCommercialDetails.deleteImage(event);">&times;</a><a href="#" class="pop" id="commercialImageAnkerID_' + SampleItems[i].ID + '" onclick="InventoryCommercialDetails.slideshowImage(event);"><img src="' + path + SampleItems[i].FileName + '" alt="..." class="margin" id="commercialImageID_' + SampleItems[i].ID + '" style="height:100px; margin-left: -12px;"></a></div></div>';
        }
        $('#uploadedCommercialImagesContainer').html($cloneRow);
        $("#uploadedCommercialImagesContainerDiv").css("display", "none");
    }
    function deleteImage(e) {
        var _id = e.target.id;
        var splitID = _id.split('_');
        SampleAndParameterDetails.deleteSampleImage(splitID[1]);
    }
    function  slideshowImage(e) {
        debugger;
        var _id = e.target.id;
        var SplitID = _id.split("_");
        var src = $("#commercialImageID_" + SplitID[1]).attr('src');
        $('.imagepreview').attr('src', src);
        //$('.imagepreview').attr('src', $("#" + _id).find('img').attr('src'));
        $('#imagemodal').modal('show');
    }
    function addInventoryCommercialDetails() {
        debugger;
        var data = getInventoryCommercialDetails();
        // ajaxRequest.makeRequest('/Inventory/Inventory/InventoryCommercialDetails', "POST", data, InventoryCommercialDetails.onSuccess, InventoryCommercialDetails.onError);
        $.ajax({
            type: 'Post',
            url: "/Inventory/Inventory/InventoryCommercialDetails",
            data: JSON.stringify(data),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                onSuccess(data)
            },
            failure: function (data) {
                onError()
            },
        });
    }
    function  fatchInventoryCommercialDetails() {
        debugger;
        var data = {
            "ID": ""
        };
        data.ID = $("#BasicDetailsID").val();
        //  ajaxRequest.makeRequest('/Inventory/Inventory/FatchCommercialDetailsByID', "POST", data, InventoryCommercialDetails.onSuccessFatchCommercialDetailsByID, InventoryCommercialDetails.onError);
        $.ajax({
            type: 'Post',
            url: "/Inventory/Inventory/FatchCommercialDetailsByID",
            data: JSON.stringify(data),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
            onSuccessFatchCommercialDetailsByID(data)
            },
            failure: function (data) {
                alert("Failed");
            },
        });
    }
    function getInventoryCommercialDetails() {
        debugger;
        var data = {
            "ID": ""
        };
        if ($("#CommercialDetailsID").val() != "") {

            data.ID = $("#CommercialDetailsID").val();
        }
        else {
            data.ID = 0
        }

        data.InventoryBasicDetailsID = $("#BasicDetailsID").val();
        data.VendorName = $("#VendorName").val();
        data.PurchaseOrderNumber = $('#PurchaseOrderNumber').val();
        data.PurchaseOrderDate = $("#PurchaseOrderDate").val();


        //if ($('#PurchaseOrderDate').val() != "") {

        //    data.PurchaseOrderDate = new Date($('#PurchaseOrderDate').val());
        //}
        //else {

        //    var from = $("#PurchaseOrderDateval").val().split("/")
        //    var f = new Date(from[2], from[1] - 1, from[0])
        //    data.PurchaseOrderDate = f;
        //}
        //data.PurchaseOrderDate = new Date(
        //                             applicationSystem.convertionOfDateFormat(
        //                             $("#PurchaseOrderDate").val(),
        //                             applicationSystem.aspectedFormat,
        //                             applicationSystem.currentServerFormat,
        //                             applicationSystem.aspectedServerSeparator,
        //                             applicationSystem.currentServerSeparator
        //                         ));
        data.PurchaseOrderValue = $("#PurchaseOrderValue").val();

        //data.PurchaseDate = new Date($("#PurchaseDate").val());
        if ($('#PurchaseDate').val() != "") {

            data.PurchaseDate = new Date($('#PurchaseDate').val());
        }
        else {

            var from = $("#PurchaseDateval").val().split("/")
            var f = new Date(from[2], from[1] - 1, from[0])
            data.PurchaseDate = f;
        }
        //data.PurchaseDate = new Date(
        //                             applicationSystem.convertionOfDateFormat(
        //                             $("#PurchaseDate").val(),
        //                             applicationSystem.aspectedFormat,
        //                             applicationSystem.currentServerFormat,
        //                             applicationSystem.aspectedServerSeparator,
        //                             applicationSystem.currentServerSeparator
        //                         ));
        data.InvoiceNumber = $("#InvoiceNumber").val();
        data.DeliveryChallanNo = $('#DeliveryChallanNo').val();
        data.DeliveryTime = $('#DeliveryTime').val();

        //data.DeliveryChallanDate = new Date($("#DeliveryChallanDate").val());
        if ($('#DeliveryChallanDate').val() != "") {

            data.DeliveryChallanDate = new Date($('#DeliveryChallanDate').val());
        }
        else {
            var from = $("#DeliveryChallanDateval").val().split("/")
            var f = new Date(from[2], from[1] - 1, from[0])
            data.DeliveryChallanDate = f;
        }

        //data.BillDate = new Date($("#BillDate").val());
        if ($('#BillDate').val() != "") {

            data.BillDate = new Date($('#BillDate').val());
        }
        else {

            var from = $("#BillDateval").val().split("/")
            var f = new Date(from[2], from[1] - 1, from[0])
            data.BillDate = f;
        }
        return data;
    }
    function setInventoryCommercialDetails() {

    }
    
    function  onSuccess(data) {
        debugger;
        $("#CommercialDetailsID").val(data.ID);
        $("#tabHead_Maintainance").attr("data-toggle", "tab");
        $("#tabHead_Maintainance").trigger("click");
        $("#add_new_item_li").css("display", "none");
        if ($("#InventoryTypeMasterID").val() == "1") {
           // var url = applicationSystem.get_hostname() + "/Inventory/Inventory/ConsumableList";
            location.href ='/Inventory/Inventory/ConsumableList';
           // window.location.href = url;
        }
        else
            if ($("#InventoryTypeMasterID").val() == "2") {
                debugger;
                fatchInventoryBasicItemDetailByCommercialID();
            }
    }
    function onSuccessFatchCommercialDetailsByID(data) {
        debugger;
        if (data.status == "success") {
            if (data.CommercialDetails.length > 0) {
                $("#VendorName").val(data.CommercialDetails[0].VendorName);
                $("#PurchaseOrderNumber").val(data.CommercialDetails[0].PurchaseOrderNumber);
                $("#CommercialDetailsID").val(data.CommercialDetails[0].ID);
                if (data.CommercialDetails[0].PurchaseOrderDate != null) {
                    var newdate = data.CommercialDetails[0].PurchaseOrderDate;
                    var dateString = newdate.toString().substr(6);
                    var currentTime = new Date(parseInt(dateString));
                    var month = currentTime.getMonth() + 1;
                    var day = currentTime.getDate();
                    var year = currentTime.getFullYear();
                    if (parseInt(month) < 10) {
                        month = "0" + month;
                    }
                    if (parseInt(day) < 10) {
                        day = "0" + day;
                    }
                    var ReceivedDate = day + "/" + month + "/" + year;
                    $("#PurchaseOrderDate").val(ReceivedDate);
                    $("#PurchaseOrderDateval").val(ReceivedDate);
                }

                $("#PurchaseOrderValue").val(data.CommercialDetails[0].PurchaseOrderValue);

                $("#DeliveryChallanNo").val(data.CommercialDetails[0].DeliveryChallanNo);
                $("#DeliveryTime").val(data.CommercialDetails[0].DeliveryTime);

                if (data.CommercialDetails[0].PurchaseDate != null) {
                    var tempdate = data.CommercialDetails[0].PurchaseDate;
                    var tempString = tempdate.toString().substr(6);
                    var tempcurrentTime1 = new Date(parseInt(tempString));
                    var tempmonth1 = tempcurrentTime1.getMonth() + 1;
                    var tempday1 = tempcurrentTime1.getDate();
                    var tempyear1 = tempcurrentTime1.getFullYear();
                    if (parseInt(tempmonth1) < 10) {
                        tempmonth1 = "0" + tempmonth1;
                    }
                    if (parseInt(tempday1) < 10) {
                        tempday1 = "0" + tempday1;
                    }
                    var RtempeceivedDate1 = tempday1 + "/" + tempmonth1 + "/" + tempyear1;
                    $("#PurchaseDate").val(RtempeceivedDate1);
                    $("#PurchaseDateval").val(RtempeceivedDate1);
                }
                if (data.CommercialDetails[0].DeliveryChallanDate != null) {
                    var tempdate = data.CommercialDetails[0].DeliveryChallanDate;
                    var tempString = tempdate.toString().substr(6);
                    var tempcurrentTime1 = new Date(parseInt(tempString));
                    var tempmonth1 = tempcurrentTime1.getMonth() + 1;
                    var tempday1 = tempcurrentTime1.getDate();
                    var tempyear1 = tempcurrentTime1.getFullYear();
                    if (parseInt(tempmonth1) < 10) {
                        tempmonth1 = "0" + tempmonth1;
                    }
                    if (parseInt(tempday1) < 10) {
                        tempday1 = "0" + tempday1;
                    }
                    var RtempeceivedDate1 = tempday1 + "/" + tempmonth1 + "/" + tempyear1;
                    $("#DeliveryChallanDate").val(RtempeceivedDate1);
                    $("#DeliveryChallanDateval").val(RtempeceivedDate1);
                }
                if (data.CommercialDetails[0].BillDate != null) {
                    var tempdate = data.CommercialDetails[0].BillDate;
                    var tempString = tempdate.toString().substr(6);
                    var tempcurrentTime1 = new Date(parseInt(tempString));
                    var tempmonth1 = tempcurrentTime1.getMonth() + 1;
                    var tempday1 = tempcurrentTime1.getDate();
                    var tempyear1 = tempcurrentTime1.getFullYear();
                    if (parseInt(tempmonth1) < 10) {
                        tempmonth1 = "0" + tempmonth1;
                    }
                    if (parseInt(tempday1) < 10) {
                        tempday1 = "0" + tempday1;
                    }
                    var RtempeceivedDate1 = tempday1 + "/" + tempmonth1 + "/" + tempyear1;
                    $("#BillDate").val(RtempeceivedDate1);
                    $("#BillDateval").val(RtempeceivedDate1);
                }
                $("#InvoiceNumber").val(data.CommercialDetails[0].InvoiceNumber);
                //InventoryBasicDetail.setInventoryBasicDetails(data.InventoryBasicDetail[0]);
                //InventoryBasicDetail.setInventoryBasicItemsDetails(data.InventoryBasicItemDetail);
                //InventoryBasicDetail.setInventoryBasicItemsDetailsOptionList(data.InventoryBasicItemDetail);

            }
            if (data.InventoryCommercialFileDetail.length > 0) {
                if (data.InventoryCommercialFileDetail[0].FileName != null) {
                    var path = data.ImagePath;
                    var url = window.location.href;
                    var serverName = applicationSystem.get_hostname();
                    var full_Url = serverName + path;
                    setCommercialImages(data.InventoryCommercialFileDetail, full_Url);
                }
            }
            if (data.InventoryBasicDetail.length > 0) {
                setInventoryBasicDetails(data.InventoryBasicDetail[0]);
            }
            if (data.InventoryBasicItemDetail.length > 0) {

                (data.InventoryBasicItemDetail);
                setInventoryBasicItemsDetailsOptionList(data.InventoryBasicItemDetail);
            }
        }
        else if (data.status == "info") {
            applicationSystem.onError(data);
        }
        else if (data.status == "fail") {
            applicationSystem.onError(data);
        }
    }
    function setInventoryBasicDetails(data) {
        debugger;
        if (data != null) {

            $("#ItemID").val(data.ItemID).change();
            $("#ID").val(data.ID);
            $("#TypeID").val(data.TypeID);
            $("#CategoryID").val(data.CategoryID);
            $("#UnitID").val(data.UnitID);
            $("#QuantityType").val(data.QuantityType);
            if ($("#QuantityType").val() == "Quantity" || $("#QuantityType").val() == "Batch Quantity") {
                // $("#QuantityLeft").removeAttr("disabled");
            }
            else {
                // $("#QuantityLeft").attr("disabled", "disabled");
            }

            $("#QuantityLeft").val(data.Quantity);
            $("#TQuantity").val(data.TQuantity);
            $("#Warranty").val(data.Warranty);
            $("#BasicDetailsID").val(data.ID);
            $("#TotalQuantity").val(data.TotalQuantity);
            $("#InventoryBasicDetailsNumber").val(data.InventoryBasicDetailsNumber);
            $('#Manufacturer').val(data.Manufacturer);
            $('#GradeReceived').val(data.GradeReceived);
            $('#ConditionOfPackaging').val(data.ConditionOfPackaging);
            $('#IntegrityOfPackaging').val(data.IntegrityOfPackaging);
            $('#CertifiedConcentration').val(data.CertifiedConcentration);
            $('#Praceability').val(data.Praceability);
            $('#PurchaseRequestID').val(data.PurchaseRequestID);
            $('#Remark').val(data.Remark);
            $('#BrandReceived').val(data.BrandReceived);
            $('#StorageLocation').val(data.StorageLocation);


            //$('#DOM').val(applicationSystem.convertJsonDateFormat(data.DOM, "dd/MM/yyyy"));
            //$('#DOM').val(applicationSystem.convertionFromJsonDateFormat(data.DOM, applicationSystem.currentServerFormat, applicationSystem.currentServerSeparator));
            //var x1 = applicationSystem.convertionFromJsonDateFormat(data.DOM, applicationSystem.currentServerFormat, applicationSystem.currentServerSeparator);
            //var y1 = x1.split("/");
            //var z1 = y1[1] + "/" + y1[0] + "/" + y1[2];
            ////$('#DOMval').val(z1);
            //if (z1 == "undefined//undefined") {
            //    $("#DOMval").val('');
            //}
            //else {
            //    $('#DOMval').val(z1);
            //}

            if (data.DOM != null) {
                var newdate = data.DOM;
                var dateString = newdate.toString().substr(6);
                var currentTime = new Date(parseInt(dateString));
                var month = currentTime.getMonth() + 1;
                var day = currentTime.getDate();
                var year = currentTime.getFullYear();
                if (parseInt(month) < 10) {
                    month = "0" + month;
                }
                if (parseInt(day) < 10) {
                    day = "0" + day;
                }
                var ReceivedDate = day + "/" + month + "/" + year;
                $("#DOM").val(ReceivedDate);
                $("#DOMval").val(ReceivedDate);
            }

            //$('#DOE').val(applicationSystem.convertionFromJsonDateFormat(data.DOE, applicationSystem.currentServerFormat, applicationSystem.currentServerSeparator));
            //var x2 = applicationSystem.convertionFromJsonDateFormat(data.DOE, applicationSystem.currentServerFormat, applicationSystem.currentServerSeparator);
            //var y2 = x2.split("/");
            //var z2 = y2[1] + "/" + y2[0] + "/" + y2[2];
            ////$('#DOEval').val(z2);
            //if (z2 == "undefined//undefined") {
            //    $("#DOEval").val('');
            //}
            //else {
            //    $("#DOEval").val(z2);
            //}

            if (data.DOE != null) {
                var newdate = data.DOE;
                var dateString = newdate.toString().substr(6);
                var currentTime = new Date(parseInt(dateString));
                var month = currentTime.getMonth() + 1;
                var day = currentTime.getDate();
                var year = currentTime.getFullYear();
                if (parseInt(month) < 10) {
                    month = "0" + month;
                }
                if (parseInt(day) < 10) {
                    day = "0" + day;
                }
                var ReceivedDate = day + "/" + month + "/" + year;
                $("#DOE").val(ReceivedDate);
                $("#DOEval").val(ReceivedDate);
            }
            //$('#DOE').val(data.DOE);
        }
    }
    function setInventoryBasicItemsDetails(data) {
        debugger;
        if (data != null) {
            var BasicItems = [];
            BasicItems = data;
            var count = BasicItems.length;
            $('#myItemTableBody').html("");

            var Type = $("#QuantityType").val();
            for (i = 0; i < BasicItems.length; ++i) {
                var $cloneRow = "";
                $cloneRow = $cloneRow + '<tr id="' + i + '" datatableID = "' + BasicItems[i].ID + '" style="width:100%;"  isdeleted="0">';
                $cloneRow = $cloneRow + '<td>' + (parseInt(i) + 1) + '</td>';
                $cloneRow = $cloneRow + '<td><input type="text"id="BatchNumber_' + i + '"   class="form-control" name="BatchNumber_' + i + '" style="width: 100%;" value="' + BasicItems[i].BatchNumber + '" /></td>';
                $cloneRow = $cloneRow + '<td><input type="text"id="LOTNo_' + i + '"   class="form-control" name="LOTNumber_' + i + '" style="width: 100%;" value="' + BasicItems[i].LOTNo + '" /></td>';
                $cloneRow = $cloneRow + '<td><input type="text"id="ModelNumber_' + i + '"   class="form-control" name="ModelNumber_' + i + '" style="width: 100%;" value="' + BasicItems[i].ModelNumber + '" /></td>';
                $cloneRow = $cloneRow + '<td><input type="text"id="SRNO_' + i + '"   class="form-control" name="SRNumber_' + i + '" style="width: 100%;" value="' + BasicItems[i].SRNO + '" /></td>';
                $cloneRow = $cloneRow + '<td><input type="text"id="BarcodeNumber_' + i + '"   class="form-control" name="BarcodeNumber_' + i + '" style="width: 100%;" value="' + BasicItems[i].BarcodeNumber + '" /></td>';

                if (Type == "Quantity") {
                    $cloneRow = $cloneRow + '<td></td>';
                }
                else if (Type == "Batch Quantity") {
                    $cloneRow = $cloneRow + '<td><input type="text"id="Quantity_' + i + '"   class="form-control allowNumbersWithDecimalOnly" name="Quantity_' + i + '" style="width: 100%;" value="' + BasicItems[i].Quantity + '" /></td>';
                }

                $cloneRow = $cloneRow + '<td><input type="text"id="Description_' + i + '"   class="form-control"  name="Description_' + i + '" style="width: 100%;" value="' + BasicItems[i].Description + '" /></td>';
                //$cloneRow = $cloneRow + '<td><a href="#" title="Delete" class="glyphicon glyphicon-trash" data-toggle="modal" data-target="#myModal" id="rowDelete_' + i + '" name="rowDelete_' + i + '" operation="Delete Item"> </a>';
                //$cloneRow = $cloneRow + '<td></td>';
                $cloneRow = $cloneRow + '</tr>';
                $('#myItemTableBody').append($cloneRow);


                $('.allowNumbersWithDecimalOnly').keydown(function (e) {
                    var keyCode = (e.keyCode ? e.keyCode : e.which);
                    if (keyCode > 64 && keyCode < 91 || keyCode > 218 && keyCode < 223 || keyCode > 185 && keyCode < 190 || keyCode == 191 || keyCode == 192 || keyCode > 105 && keyCode < 110 || keyCode == 111 || keyCode == 16 || keyCode == 17 || keyCode == 18 || (((e.shiftKey && e.which) > 47) && ((e.shiftKey && e.which) < 58)) || (((e.shiftKey && e.which) > 218) && ((e.shiftKey && e.which) < 223)) || (((e.shiftKey && e.which) > 185) && ((e.shiftKey && e.which) < 193)) || (((e.shiftKey && e.which) > 105) && ((e.shiftKey && e.which) < 112))) {
                        e.preventDefault();
                    }
                    else {
                        if (keyCode == 190 || keyCode == 110) {
                            var id = $(this).attr("id");
                            if ($('#' + id).val().indexOf(".") >= 0) {
                                e.preventDefault();
                            }
                        }
                    }
                });
            }
            $("#Quantity").val(BasicItems.length);
            if ($("#QuantityType").val() == "Quantity") {
                $("#TotalQuantity").val($("#Quantity").val());
            }
        }
    }
    function onSuccessFatchInventoryBasicItemDetailByCommercialID(data) {

        debugger
        if (data.status == "success") {
            bindBasicItemsOptionList(data.BasicItemsDetails);
        }
        if (data.status == "fail") {
        }
    }
    function fatchInventoryBasicItemDetailByCommercialID() {
        debugger
        var data = {
            "ID": "0"
        };
        data.ID = $("#BasicDetailsID").val();
        $.ajax({
            type: 'Post',
            url: "/Inventory/Inventory/FatchBasicItemsDetails",
            data: JSON.stringify(data),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                onSuccessFatchInventoryBasicItemDetailByCommercialID(data)
            },
            failure: function (data) {
                onError()
            },
        });
    }
    function bindBasicItemsOptionList(data) {
        if (data != null) {
            var ItemsList = [];
            ItemsList = data;
            var count = ItemsList.length;
            var $cloneRow = "";
            $cloneRow = $cloneRow + "<option value=''>Field Type...</option>";
            for (i = 0; i < ItemsList.length; ++i) {
                $cloneRow = $cloneRow + "<option value='" + ItemsList[i].ID + "' title = '" + ItemsList[i].ID + "'>" + ItemsList[i].InventoryBasicItemDetailsNumber + "</option>";
            }
            $("#InventoryBasicItemDetailsID").html($cloneRow);
            $("#CalibrationInventoryBasicItemDetailsID").html($cloneRow);


            $("#tabHead_Maintainance").attr("data-toggle", "tab");
            $("#tabHead_Maintainance").trigger("click");

            //InventoryBasicDetail.BasicItemsOptionList = $cloneRow;
        }
    }
    function setInventoryBasicItemsDetailsOptionList(data) {
        debugger;
        if (data != null) {
            var BasicItems = [];
            BasicItems = data;
            var count = BasicItems.length;
            var $cloneRow = "";
            $cloneRow = $cloneRow + "<option value=''>Select Item...</option>";
            for (i = 0; i < BasicItems.length; ++i) {
                $cloneRow = $cloneRow + "<option value='" + BasicItems[i].ID + "' title = '" + BasicItems[i].ID + "'>" + BasicItems[i].InventoryBasicItemDetailsNumber + "</option>";
            }
            $("#InventoryBasicItemDetailsID").html($cloneRow);
            $("#CalibrationInventoryBasicItemDetailsID").html($cloneRow);
        }
    }
</script>*@


