@model LIMS_DEMO.Areas.Inventory.Models.InventoryBasicDetailModel

<div class="mobile-menu-overlay"></div>
<div class="main-container">
    <div class="pd-ltr-20 xs-pd-20-10">
        <div class="min-height-200px">
            <div class="page-header">
                <div class="row">
                    <div class="col-md-6 col-sm-12 text-right">
                    </div>
                </div>
            </div>
            <div class="pd-20 card-box mb-30" style="margin-left:-260px;margin-top:-140px;width:900px;">
                <div class="clearfix">
                    <h4 class="text-blue h4">Add Basic Details Form</h4>
                    <p class="mb-30"></p>
                </div>
                <div class="wizard-content">
                    @using (Html.BeginForm("InventoryBasicDetails", "Inventory", FormMethod.Post, new { id = "_BasicDetails" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        @Html.Hidden("BasicDetailsID", (object)ViewBag.BasicDetailsIdViewBag)
                        @Html.Hidden("InventoryBasicDetailsNumber")
                        @Html.Hidden("InventoryTypeMasterID", (object)ViewBag.InventoryTypeMasterIDViewBag)
                        @Html.HiddenFor(model => model.PurchaseRequestID)
                        @Html.Hidden("ID",(object)ViewBag.BasicDetailsIdViewBag)

                        <h5></h5>
                        <section>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Item Name:</label>
                                        @Html.DropDownListFor(model => model.ItemID, (SelectList)ViewBag.InventoryItemListViewBag1, "Select Inventory Item...", new { @class = "custom-select form-control" })
                                        @Html.ValidationMessageFor(model => model.ItemID)
                                        @Html.HiddenFor(model => model.ItemID)
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Inventory Type:</label>
                                        @Html.DropDownListFor(model => model.TypeID, new SelectList(ViewBag.InvInventoryTypeList, "InventoryTypeID", "InventoryTypeName"), "-------Select-------", new { @class = "custom-select form-control" })
                                        @Html.ValidationMessageFor(model => model.TypeID, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(model => model.TypeID)
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Category Type:</label>
                                        @Html.DropDownListFor(model => model.CategoryID, new SelectList(ViewBag.InvCategoryList, "CatagoryMasterID", "CategoryName"), "------Select------", new { @class = "custom-select form-control" })
                                        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(model => model.CategoryID)
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Unit:</label>
                                        @Html.DropDownListFor(model => model.UnitID, new SelectList(ViewBag.InvUnitList, "UnitId", "Unit"), "-------Select-------", new { @class = "custom-select form-control" })
                                        @Html.ValidationMessageFor(model => model.UnitID, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(model => model.UnitID)
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Capacity/PackSize:</label>
                                        @Html.TextBoxFor(model => model.PackSize, new { @class = "form-control",@style = "width:400px;" })
                                        @Html.ValidationMessageFor(model => model.PackSize, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Quantity:</label>
                                        @Html.TextBoxFor(model => model.QuantityType, new { @class = "form-control",@style = "width:400px;"})
                                        @Html.ValidationMessageFor(model => model.QuantityType, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Quantity Received:</label>
                                        @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control",@style = "width:400px;" })
                                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Pre-Received Quantity:</label>
                                        @*@Html.TextBoxFor(model => model.QuantityLeft, new { @class = "form-control", @style = "width:400px;" })*@
                                        <input type="text" id="QuantityLeft" name="QuantityLeft" value="" class="form-control" style="width:400px;" />
                                        @Html.ValidationMessageFor(model => model.QuantityLeft, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Brand:</label>
                                        @Html.TextBoxFor(model => model.Brand, new { @class = "form-control",@style = "width:400px;" })
                                        @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Brand Received:</label>
                                        @Html.TextBoxFor(model => model.BrandReceived, new { @class = "form-control",@style = "width:400px;" })
                                        @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Grade:</label>
                                        @Html.TextBoxFor(model => model.Grade, new { @class = "form-control",@style = "width:400px;" })
                                        @Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Grade Received:</label>
                                        @Html.TextBoxFor(model => model.GradeReceived, new { @class = "form-control",@style = "width:400px;" })
                                        @Html.ValidationMessageFor(model => model.GradeReceived, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Integrity and Condition Packaging:</label>
                                        @Html.TextBoxFor(model => model.ConditionOfPackaging, new { @class = "form-control",@style = "width:400px;" })
                                        @Html.ValidationMessageFor(model => model.ConditionOfPackaging, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Storage temperature:</label>
                                        @Html.TextBoxFor(model => model.IntegrityOfPackaging, new { @class = "form-control",@style = "width:400px;" })
                                        @Html.ValidationMessageFor(model => model.IntegrityOfPackaging, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">


                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Warranty (in months):</label>
                                        @Html.TextBoxFor(model => model.Warranty, new { @class = "form-control",@style = "width:400px;" })
                                        @Html.ValidationMessageFor(model => model.Warranty, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Name of Manufacturer:</label>
                                        @Html.TextBoxFor(model => model.Manufacturer, new { @class = "form-control",@style = "width:400px;" })
                                        @Html.ValidationMessageFor(model => model.Manufacturer, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Date of Manufacturing:</label>
                                        <input type="date" id="DOM" name="DOM" value="" class="form-control" style="width:400px;" />
                                        <input type="text" id="DOMval" name="DOMval" value="" class="form-control" disabled  style="width:400px;"/>

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Certified Concentration:</label>
                                        @Html.TextBoxFor(model => model.CertifiedConcentration, new { @class = "form-control",@style = "width:400px;" })
                                        @Html.ValidationMessageFor(model => model.CertifiedConcentration, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Traceability:</label>
                                        @Html.TextBoxFor(model => model.Praceability, new { @class = "form-control",@style = "width:400px;" })
                                        @Html.ValidationMessageFor(model => model.Praceability, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Date of Expiry:</label>
                                        <input type="date" id="DOE" name="DOE" value="" class="form-control" style="width:400px;" />
                                        <input type="text" id="DOEval" name="DOEval" value="" class="form-control" disabled  style="width:400px;"/>

                                        <input type="date" id="DOExpiry" name="DOExpiry" value="" class="form-control" style="width:400px;" />
                                        <input type="text" id="DOEval" name="DOEval" value="" class="form-control" disabled  style="width:400px;"/>

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Remark:</label>
                                        @Html.TextBoxFor(model => model.Remark, new { @class = "form-control",@style = "width:400px;" })
                                        @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
 
                                <div class="clearfix">
                                    <h4 class="text-blue h4">Add Basic Details Form</h4>
                                    <p class="mb-30"></p>
                                </div>
                                <div style="display: block;">
                                        <!-- attach parameter list here -->
                                        <div class="pb-20">
                                            <table class="data-table table stripe hover nowrap"  id="myItemTable" data-filter="#filter" data-filter-text-only="true" style="width:100%;">
                                                <thead>
                                                    <tr>
                                                        <th style="width: 6%;">Sr.No.</th>
                                                        <th style="width:5%; text-align: left;">BATCH NO</th>
                                                        <th style="width:5%; text-align: left;">LOT NO</th>
                                                        <th style="width:5%; text-align: left;">MODEL NO</th>
                                                        <th style="width:5%; text-align: left;">SERIAL NO</th>
                                                        <th style="width:5%; text-align: left;">BARCODE NO</th>
                                                        <th style="width:5%; text-align: left;">DESCRIPTION</th>
                                                        @*<th style=" text-align: center;" id="HeaderQuantity">QUANTITY</th>*@

                                                @*    <th style=" text-align: center;">ACTION</th>*@
                                            </tr>
                                        </thead>
                                        <tbody id="myItemTableBody">
                                        </tbody>
                                    </table>
                                </div>
                                <!-- attach parameter list here -->
                            </div>

                            <div class="row">
                                <div class="col-md-6" style="margin-left:450px;">
                                    <div class="form-group">
                                        <input type="submit" value="Create" class="btn btn-primary" id="buttonSaveInventoryBasicDetails" name="buttonSaveInventoryBasicDetails" style="background-color:mediumblue;color:white;" />
                                    </div>
                                </div>
                            </div>
                        </section>
                    }
                </div>
            </div>
            <!-- success Popup html Start -->
            <div class="modal fade" id="success-modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-body text-center font-18">
                            <h3 class="mb-20">Form Submitted!</h3>
                            <div class="mb-30 text-center"><img src="vendors/images/success.png"></div>
                            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
                        </div>
                        <div class="modal-footer justify-content-center">
                            <button type="button" class="btn btn-primary" data-dismiss="modal">Done</button>
                        </div>
                    </div>
                </div>
            </div>
            <!-- success Popup html End -->
        </div>
    </div>
</div>

<script type="text/javascript">

    $("#Quantity").on('change', function () {
        debugger
        var totalRows = $("#Quantity").val();
        var Pre1 = $("#QuantityLeft").val();
        var _tableLastRowId = $('#myItemTableBody tr:last').attr('id');
        if (typeof _tableLastRowId === "undefined") {
            $('#myItemTableBody').html("");
            _tableLastRowId = 0;
        }
        if (totalRows <= Pre1) {
            if (parseInt(totalRows) > parseInt(_tableLastRowId)) {
                InventoryBasicDetail.createRowsInventoryBasicIntemDetails();
            }
            else {

                var _countRow = parseInt(_tableLastRowId) - parseInt(totalRows);
                for (var counter = 0; counter <= parseInt(_countRow); ++counter) {
                    $('#myItemTableBody tr:last').remove();
                }

            }
        }
        else {

            alert('Received Quantity Must be greater than Pre-Received Quantity');
            $("#Quantity").val(Pre1);
        }
        if ($("#QuantityType").val() == "Quantity") {
            $("#TotalQuantity").val($("#Quantity").val());
        }
    });
        $('#myItemTable tbody').on('click', 'a', function () {
            var listItemId = $(this).closest('tr').attr('id');
            var datatableid = $(this).closest('tr').attr('datatableid');
            var operation = $(this).attr('operation');
            var controlId = $(this).attr('id');
            splitedRowID = controlId.split("_");

            if (operation == "Delete Item") {
                if (parseInt(datatableid) > 0) {
                    $(this).closest('tr').attr('isdeleted', '1');
                    $(this).closest('tr').remove();



                    //var siblings = $(this).closest('tr').siblings();
                    //row.remove();
                    //siblings.each(function (index) {
                    //    $(this).children('td').first().text(index + 1);
                    //});
                }
                else {
                    $(this).closest('tr').remove();
                    var inventoryItemsNoOfRows = $('#myItemTableBody tr').length;
                    if (parseInt(inventoryItemsNoOfRows) == 0) {
                        var string = "<tr class='odd'><td valign='top' colspan='6' class='dataTables_empty'>No data available in table</td></tr>";
                        $('#myItemTableBody').html(string);
                    }

                }
                var _totalQuantity = 0;
                var _counter = 0;
                $("#myItemTableBody tr").each(function () {

                    var _rowID = $(this).attr("id");
                    var _Quantity = ($('#Quantity_' + _rowID).val() == "") ? 0 : parseInt($('#Quantity_' + _rowID).val());
                    if ((parseInt(_Quantity) == 0) || (parseInt(_Quantity) == NaN) || _Quantity == "null") {

                    }
                    else {
                        if (!isNaN(_Quantity)) {
                            _totalQuantity = _totalQuantity + _Quantity;
                        }
                    }

                    $(this).children('td').first().text(_counter + 1);
                    _counter = _counter + 1;

                });
                $("#Quantity").val(_counter);
                if (_totalQuantity == 0) {
                    $("#TotalQuantity").val(_counter);
                }
                else {
                    $("#TotalQuantity").val(_totalQuantity);
                }


            }




        });





    $('#myItemTable tbody').on('blur', 'input', function () {

        var listItemId = $(this).closest('tr').attr('id');
        var datatableid = $(this).closest('tr').attr('datatableid');
        var operation = $(this).attr('operation');
        var controlId = $(this).attr('id');
        splitedRowID = controlId.split("_");
        if (splitedRowID[0] == "Quantity") {
            var _totalQuantity = 0;
            $("#myItemTableBody tr").each(function () {

                var _rowID = $(this).attr("id");
                var _Quantity = ($('#Quantity_' + _rowID).val() == "") ? 0 : parseInt($('#Quantity_' + _rowID).val());
                if ((parseInt(_Quantity) == 0) || (parseInt(_Quantity) == NaN)) {

                }
                else {
                    _totalQuantity = _totalQuantity + _Quantity;
                }

            });
            $("#TotalQuantity").val(_totalQuantity);

        }
        //_rowID = splitedRowID[1];
    });
</script>

