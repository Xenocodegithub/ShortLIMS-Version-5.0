@model LIMS_DEMO.Areas.Invoice.Models.InvoiceModel

@{
    ViewBag.Title = "Payment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="main-container">
    <div class="pd-ltr-20 xs-pd-20-10">
        <div class="min-height-200px">
            <div class="page-header">
                <div class="row">
                    <div class="col-md-6 col-sm-12">
                        <div class="title">
                            <h4>Invoice</h4>
                        </div>
                        <nav aria-label="breadcrumb" role="navigation">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="#">Payment</a></li>
                                <li class="breadcrumb-item active" aria-current="page">Payment</li>
                                <li class="breadcrumb-item active" aria-current="page">Payment</li>
                            </ol>
                        </nav>
                    </div>
                        <div class="col-md-6 col-sm-12 text-right">
                            <div class="dropdown">
                                <a class="btn btn-outline-success primary right" href="/Invoice/Invoice/DailyInvoiceList" role="button">
                                    DailyInvoiceList
                                </a>
                            </div>
                        </div>
                </div>
            </div>
            <div class="pd-20 card-box mb-30">
                <div class="clearfix">
                    <div class="pull-left">
                        <h4 class="text-blue h4">Add Payment</h4>
                    </div>

                </div>
                @using (Ajax.BeginForm("Payment", "Invoice", new AjaxOptions() { HttpMethod = "Post", OnSuccess = "AddPaymentSuccess" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.CostingId)
                    @Html.HiddenFor(model => model.EnquirySampleID)
                    @Html.HiddenFor(model => model.EnquiryMasterSampleTypeId)
                    @Html.HiddenFor(model => model.PaymentDetailsId)
                    @Html.HiddenFor(model => model.WorkOrderId)

                    <input id="gstRate" type="hidden" value="@ViewBag.GSTRate" />
                    <input id="Id" type="hidden" value="@ViewBag.EnquiryId" />


                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                    <div class="form-group row">
                        <label class="col-sm-12 col-md-2 col-form-label">Registration Name:</label>
                        @*<span class="text-span" id="RegName"></span>*@
                        @*@Html.LabelFor(model => model.RegistrationName, htmlAttributes: new { @class = "control-label col-md-6" })*@
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.RegistrationName, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                        <label class="col-sm-12 col-md-2 col-form-label">Invoice Number:</label>
                        @*<span class="text-span" id="InvNumber"></span>*@
                        @*@Html.LabelFor(model => model.InvoiceNumber, htmlAttributes: new { @class = "control-label col-md-6" })*@
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.InvoiceNumber, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-sm-12 col-md-2 col-form-label">Work Order No:</label>

                        @*@Html.LabelFor(model => model.WorkOrderNo, htmlAttributes: new { @class = "control-label col-md-6" })*@
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.WorkOrderNo, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                        <label class="col-sm-12 col-md-2 col-form-label"> Total Amount:</label>

                        @*@Html.LabelFor(model => model.TotalAmount, htmlAttributes: new { @class = "control-label col-md-6" })*@
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.TotalAmount, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-12 col-md-2 col-form-label"> Paid Amount:</label>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.PaidAmount, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.PaidAmount, "", new { @class = "text-danger" })
                        </div>
                        <label class="col-sm-12 col-md-2 col-form-label">Balance:</label>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.Balance, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-12 col-md-2 col-form-label">Payment Mode:</label>

                        <div class="col-sm-4">
                            @Html.DropDownListFor(model => model.PaymentModeMasterId, new SelectList(ViewBag.paymentMode, "PaymentModeMasterId", "PaymentMode"), "---Select Payment---", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PaymentModeMasterId, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.PaymentModeMasterId)
                        </div>
                        <label class="col-sm-12 col-md-2 col-form-label">Bank Name:</label>

                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.BankName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-12 col-md-2 col-form-label">Cheque No:</label>


                        <div class="col-sm-4">

                            @Html.TextBoxFor(model => model.ChequeNo, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ChequeNo, "", new { @class = "text-danger" })
                        </div>
                        <label class="col-sm-12 col-md-2 col-form-label">DD_Cheque Date:</label>


                        <div class="col-sm-4">

                            <input type="date" id="DD_ChequeDate" name="DD_ChequeDate" value="" class="form-control" />
                            @Html.ValidationMessageFor(model => model.DD_ChequeDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-12 col-md-2 col-form-label"> Actual Amount:</label>


                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.ActualAmount, new { @class = "form-control", onfocus = "this.value=''" })
                            @Html.ValidationMessageFor(model => model.ActualAmount, "", new { @class = "text-danger" })
                        </div>
                        <label class="col-sm-12 col-md-2 col-form-label"> Payment Date:</label>
                        <div class="col-sm-4">

                            <input type="date" id="PaymentDate" name="PaymentDate" value="" class="form-control" />
                            @Html.ValidationMessageFor(model => model.PaymentDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12 col-md-12">
                            <button type="submit" id="" class="btn btn-info btn-sm" onclick="" style="float:right;">Reset</button> 
                            <button type="submit" id="btnsubmit1" onclick="validation();" class="btn btn-success btn-sm" style="float:right;">Save</button>
                        </div>
                    </div>
                }
            </div>
            
            
            
            @*<div>
                <a href="@Url.Action("_PaymentList","Invoice",new { })" class="clickSmaple" data-toggle="modal" data-target="#myModal1"> <span class="fa fa-print"></span></a>

            </div>*@
            
            <div id="Payment_List">
                @{
                    Html.RenderAction("_PaymentList", "Invoice", new { WorkorderNumber = Model.WorkOrderNo });
                   
                }
            </div>
        </div>
        </div>
    </div>


<script src="~/Scripts/jquery.validate-vsdoc.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script>
  
    $(document).ready(function () {
        debugger;
       calculte();
    });
    function validation() {
        funCalNetAmount();
        var a = ValidateAmt();
        if (a == false) {
           window.location.href = window.location.href;
        }
    };
    function AddPaymentSuccess() {
        debugger;
        var wono = $('#WorkOrderNo').val();
        $("#Payment_List").html('');
        window.location.href = window.location.href;

    }
    function calculte() {
        var Bal = $('#TotalAmount').val() - $('#PaidAmount').val()
        $('#Balance').val(Bal);
    }
     $('#PaymentModeMasterId').change(function () {
        debugger
         if ($('#PaymentModeMasterId option:selected').text() == 'ByCheque') {
             $("#BankName").removeAttr("disabled");
             $("#ChequeNo").removeAttr("disabled");
             $("#DD_ChequeDate").removeAttr("disabled");
         }
         else {
             $("#BankName").attr("disabled", "disabled");
             $("#ChequeNo").attr("disabled", "disabled");
             $("#DD_ChequeDate").attr("disabled", "disabled");
         }
    });
    function OnClick() {
        $('#btnAddCosting').val('Please Wait..');
        $('#btnAddCosting').prop('disabled', true);
    }

    function funCalNetAmount() {
        debugger;
        var TotalCharges = $('#TotalAmount').val() == '' ? parseFloat(0.0).toFixed(2) : $('#TotalAmount').val();
        var PaidAmount = $('#PaidAmount').val() == '' ? parseFloat(0.0).toFixed(2) : $('#PaidAmount').val();
        var Paid= $('#ActualAmount').val() == '' ? parseFloat(0.0).toFixed(2) : $('#ActualAmount').val();
        var paid2 = (Number(PaidAmount) + Number(Paid));
        var balance = (Number(TotalCharges) - Number(paid2));
        $('#PaidAmount').val((paid2).toFixed(1)); 
        $('#Balance').val((balance).toFixed(1));
    }
    function ValidateAmt() {
        debugger
        var Balance = $('#Balance').val();
        var ActualCharges = $('#ActualAmount').val();
        if (ActualCharges <= Balance) {
            
            return true;
        }
        else {
            alert('Actual amount Should be less than or equal Total Amount');
            $("ActualAmount").val("");
            return false;
        }
    }
    
</script>




