
@model LIMS_DEMO.Areas.WorkOrderCustomer.Models.WorkOrderCustomerListModel



@using (Ajax.BeginForm("_AddSampleDetails", "WorkOrderCustomer", new AjaxOptions() { HttpMethod = "Post", OnBegin = "onLoad", OnSuccess = "ParameterSuccess" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.WorkOrderCustomer.EnquirySampleID)
    @Html.HiddenFor(model => model.WorkOrderCustomer.EnquiryDetailId)

    <!-- Simple Datatable start -->
    <div class="card-box mb-30">
        <div class="pb-20">
          <input class="searchbox111" type="text" id="myInput" onkeyup="myFunction()" placeholder="Search by parameters.." title="Type Keywords">
          <table id="tblParameters" class="data-table table nowrap">
                    <thead>
                        <tr class="thead-dark">
                            <th class="table-plus datatable-nosort">
                                <input type="checkbox" id="chkAllParameter" />
                            </th>
                            <th>
                                Parameter
                            </th>
                            <th>
                                Discipline
                            </th>
                            <th>
                                Unit
                            </th>
                            @*<th class="width-15">
                                Charge
                             </th>*@
                            <th>
                                Remarks
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.ParameterList.Count; i++)
                        {
                            <tr>
                                <td>
                                    @Html.CheckBoxFor(model => model.ParameterList[i].IsSelected, new { onchange = "CalculateParameterCharges()" })
                                    @Html.HiddenFor(model => model.ParameterList[i].EnquiryParameterDetailID)
                                </td>
                                <td>
                                    @Model.ParameterList[i].ParameterName
                                    @Html.HiddenFor(model => model.ParameterList[i].ParameterMasterId)
                                    @Html.HiddenFor(model => model.ParameterList[i].ParameterMappingId)
                                    @Html.HiddenFor(model => model.ParameterList[i].ParameterGroupId)
                                </td>
                                <td>
                                    @Model.ParameterList[i].Discipline
                                    @Html.HiddenFor(model => model.ParameterList[i].DisciplineId)
                                </td>
                                <td hidden>
                                    @Html.DropDownListFor(model => model.ParameterList[i].TestMethodId, new SelectList(Model.ParameterList[i].TestMethods, "TestMethodId", "TestMethod", Model.ParameterList[i].TestMethodId), new { @class = "form-control btn-sm dropdown-toggle border" })
                                </td>
                                <td>
                                    @Html.DropDownListFor(model => model.ParameterList[i].UnitId, new SelectList(Model.ParameterList[i].Units, "UnitId", "Unit", Model.ParameterList[i].UnitId), new { @class = "form-control btn-sm dropdown-toggle border" })
                                </td>
                                <td hidden>
                                    @Html.TextBoxFor(model => model.ParameterList[i].Charges, new { @onkeypress = "javascript: return isDecimalNumberKey(event,value,2)", onchange = "CalculateParameterCharges()", onfocus = "this.value=''", @style = "color:black", @class = "form-control" })
                                </td>
                                <td hidden>
                                    @*@Html.DropDownListFor(model => model.ParameterList[i].LabMasterId, new SelectList(ViewBag.Branch, "LabMasterId", "LabBranchName", Model.ParameterList[i].LabMasterId), new { @class = "form-control btn-sm dropdown-toggle border" })*@
                                </td>
                                <td>
                                    @Html.TextBoxFor(model => model.ParameterList[i].Remarks, new { @style = "color:black", @class = "form-control" })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
           </div>
        <div>
           <div>
             <input type="submit" value="Save Parameters" id="SaveParameters" class="btn btn-sm btn-primary alignright" />
          </div>
     </div>
</div>
    <!-- Simple Datatable End -->
}

<script type="text/javascript">

    $(function () {
        $("#SaveParameters").click(function () {
            debugger
            var checked_checkboxes = $("#tblParameters input[type=checkbox]:checked");
            if (checked_checkboxes.length == 0) {
                alert('Please Select Parameters.');
                return false;
            }
            return true;
        });
    });

    function CalculateParameterCharges() {
        debugger
        var vCharges = 0.0;
        var vTotalCharges = parseFloat(0.0).toFixed(2);
        //Parameter
        tableParameter = document.getElementById("tblParameters");
        trParameter = tableParameter.getElementsByTagName('tr');
        for (i = 0; i < trParameter.length - 2; i++) {
            if ($('#ParameterList_' + i + '__IsSelected').prop("checked") == true) {
                debugger;
                //if (document.getElementById('ParameterList_' + i + '__Charges').value != "")
                //vCharges = parseFloat(document.getElementById('ParameterList_' + i + '__Charges').value).toFixed(1);
                //vTotalCharges = (+vTotalCharges) + (+vCharges);
                var parameterMasterId = $('#ParameterList_' + i + '__ParameterMasterId').val();
                var parameterMappingId = $('#ParameterList_' + i + '__ParameterMappingId').val();
                var testMethodId = $('#ParameterList_' + i + '__TestMethodId').val();
                var parameterGroupId = $('#ParameterList_' + i + '__ParameterGroupId').val();
                //var sampleCollectionId = $('#SampleCollectionId').val();
                var unitId = $('#ParameterList_' + i + '__UnitId').val();
                var objParam = {
                    ParameterMasterId: parameterMasterId,
                    TestMethodId: testMethodId,
                    ParameterGroupId: parameterGroupId,
                    parameterMappingId: parameterMappingId,
                    //SampleCollectionId: sampleCollectionId,
                    UnitId: unitId
                };

                $.ajax({
                    url: "/WorkOrderCustomer/WorkOrderCustomer/GetFormula",
                    type: 'GET',
                    data: objParam,
                    dataType: 'json',
                    async: false,
                    success: function (data) {
                        //if ($('#ParameterList_' + i + '__IsSelected').prop("checked") == true) {
                        //    alert('Added')
                        //}
                    },
                    error: function (xhr) {
                        alert('Please Add Formula')
                        $('#ParameterList_' + i + '__IsSelected').prop('checked', false);
                    }
                });
            }
        }
        // document.getElementById('TotalCharges').value = (vTotalCharges).toFixed(1);
        //$('#WorkOrderCustomer_TotalCharges').val((vTotalCharges).toFixed(1));
    }
</script>