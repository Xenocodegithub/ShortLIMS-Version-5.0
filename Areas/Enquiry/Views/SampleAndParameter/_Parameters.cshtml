
@model LIMS_DEMO.Areas.Enquiry.Models.SampleAndParametersModel

@using (Ajax.BeginForm("_Parameters", "SampleAndParameter", new AjaxOptions() { HttpMethod = "Post", OnBegin = "onLoad", OnSuccess = "ParameterSuccess" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.EnquirySampleID)
    @Html.HiddenFor(model => model.EnquiryDetailId)

    <!-- Simple Datatable start -->
    if (Model.ParameterList.Count != 0)
    {
     <div class="card-box mb-30">
        <div class="pb-20">
            <div>
                <label style="font-weight: 600; background-color: #208b96 !important; font-size: 14px; padding: 10px;" class="label col-md-12">Sample Name :<i class="text-capitalize">@Model.DisplaySampleName</i></label>
            </div>
            <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search by parameters.." title="Type Keywords">
            <table id="tblParameters" class="data-table table nowrap">
                <thead>
                    <tr class="thead-dark">
                        <th class="table-plus datatable-nosort"><input type="checkbox" id="chkAllParameter" /></th>
                        <th> Parameter</th>
                        <th>Discipline</th>
                        <th hidden>Test Method</th>
                        <th>Unit</th>
                        <th hidden>Charge</th>
                        <th hidden>Branch</th>
                        <th>Remarks</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.ParameterList.Count; i++)
                    {
                        <tr>
                            <td>
                                @Html.CheckBoxFor(model => model.ParameterList[i].IsSelected, new { onchange = "CalculateParameterCharges()" })
                                @Html.HiddenFor(model => model.ParameterList[i].EnquiryParameterDetailID)
                            </td>
                            <td>
                                @Model.ParameterList[i].ParameterName
                                @Html.HiddenFor(model => model.ParameterList[i].ParameterMasterId)
                                @Html.HiddenFor(model => model.ParameterList[i].ParameterMappingId)
                                @Html.HiddenFor(model => model.ParameterList[i].ParameterGroupId)
                                @Html.HiddenFor(model => model.ParameterList[i].Infield)
                            </td>
                            <td>
                                @Model.ParameterList[i].Discipline
                                @Html.HiddenFor(model => model.ParameterList[i].DisciplineId)
                                @Html.HiddenFor(model => model.ParameterList[i].ProductGroupId)
                                @Html.HiddenFor(model => model.ParameterList[i].SubGroupId)
                                @Html.HiddenFor(model => model.ParameterList[i].MatrixId)
                            </td>
                            <td hidden>
                                @Html.DropDownListFor(model => model.ParameterList[i].TestMethodId, new SelectList(Model.ParameterList[i].TestMethods, "TestMethodId", "TestMethod", Model.ParameterList[i].TestMethodId), new { @class = "form-control btn-sm dropdown-toggle border" })
                            </td>
                            <td>
                                @Html.DropDownListFor(model => model.ParameterList[i].UnitId, new SelectList(Model.ParameterList[i].Units, "UnitId", "Unit", Model.ParameterList[i].UnitId), new { @class = "form-control btn-sm dropdown-toggle border" })
                            </td>
                            <td hidden>
                                @Html.TextBoxFor(model => model.ParameterList[i].Charges, new { @onkeypress = "javascript: return isDecimalNumberKey(event,value,2)", onchange = "CalculateParameterCharges()", onfocus = "this.value=''", @style = "color:black", @class = "form-control" })
                            </td>
                            <td hidden>
                                @Html.DropDownListFor(model => model.ParameterList[i].LabMasterId, new SelectList(ViewBag.Branch, "LabMasterId", "LabBranchName", Model.ParameterList[i].LabMasterId), new { @class = "form-control btn-sm dropdown-toggle border" })
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.ParameterList[i].Remarks, new { @style = "color:black", @class = "form-control" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div>
            <div>
                <input type="submit" value="Save Parameters" id="SaveParameters" class="btn btn-sm btn-info alignright" style="width:auto" />
            </div>
        </div>
     </div>
    }
    <!-- Simple Datatable End -->
}

<script type="text/javascript">
    $(function () {
        $("#SaveParameters").click(function () {
            debugger
            var checked_checkboxes = $("#tblParameters input[type=checkbox]:checked");
            if (checked_checkboxes.length == 0) {
                alert('Please Select Parameters.');
                return false;
            }
            return true;
        });

    });
</script>
<script>

    function onLoad() {
        $('#SaveParameters').prop('disabled', true);
        $('#SaveParameters').val('Please Wait..')
    }

    function ParameterSuccess(result) {
        debugger
        // alert('asd')
        if (result.status == "success") {

            $('#divSampleDetails').load('/Enquiry/SampleAndParameter/_SampleList?EnquiryId=' + $('#EnquiryId').val(), '', function (data, status) {
                $('#SaveParameters').prop('disabled', false);
                $('#SaveParameters').val('Save Parameters')
            });

            $('#divParameters').hide();

            $('#divSampleContract').load('/Enquiry/_SampleContract?EnquiryId=' + EnquiryId, '',    // data
                function (data, status) {  // callback function

                    $('.btnChoose').prop('disabled', false);
                    $('.btnChoose').html('Choose Parameters')
                });

        }
        else {
            debugger
            //alert('Please Select Charges fields!')
            $('#SaveParameters').prop('disabled', false);
            $('#SaveParameters').val('Save Parameters')
        }
    }

    $('#chkAllParameter').change(function () {
        debugger
        $('#tblParameters tbody input[type=checkbox]').prop('checked', $(this).prop('checked'));
    })

    function CalculateParameterCharges() {
        var vCharges = 0.0;
        var vTotalCharges = parseFloat(0.0).toFixed(2);
        debugger
        //Parameter
        tableParameter = document.getElementById("tblParameters");
        trParameter = tableParameter.getElementsByTagName('tr');

        for (i = 0; i < trParameter.length - 2; i++) {

            if ($('#ParameterList_' + i + '__IsSelected').prop("checked") == true) {
                //if (document.getElementById('ParameterList_' + i + '__Charges').value != "")
                //vCharges = parseFloat(document.getElementById('ParameterList_' + i + '__Charges').value).toFixed(1);
                var parameterMasterId = $('#ParameterList_' + i + '__ParameterMasterId').val();
                var parameterMappingId = $('#ParameterList_' + i + '__ParameterMappingId').val();
                var testMethodId = $('#ParameterList_' + i + '__TestMethodId').val();
                var parameterGroupId = $('#ParameterList_' + i + '__ParameterGroupId').val();
                var Infield = $('#ParameterList_' + i + '__Infield').val();
                //var sampleCollectionId = $('#SampleCollectionId').val();
                var unitId = $('#ParameterList_' + i + '__UnitId').val();
                var objParam = {
                    ParameterMasterId: parameterMasterId,
                    TestMethodId: testMethodId,
                    ParameterGroupId: parameterGroupId,
                    parameterMappingId: parameterMappingId,
                    Infield: Infield,
                    //SampleCollectionId: sampleCollectionId,
                    UnitId: unitId
                };
                $.ajax({
                    url: "/Enquiry/SampleAndParameter/GetFormula",
                    type: 'GET',
                    data: objParam,
                    dataType: 'json',
                    async: false,
                    success: function (data) {
                        //if ($('#ParameterList_' + i + '__IsSelected').prop("checked") == true) {
                        //    alert('Added')
                        //}
                        debugger;
                    },
                    error: function (xhr) {
                        debugger;
                        alert('Please Add Formula')
                        $('#ParameterList_' + i + '__IsSelected').prop('checked', false);
                    }
                });
            }
        }
    }

    function isDecimalNumberKey(evt, thisObj, pres) {

        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (!(charCode == 46 || (charCode >= 48 && charCode <= 57))) return false;
        if (charCode == 8 || charCode == 08 || charCode == 9 || charCode == 09) return true;
        var parts = thisObj.split('.');
        if (charCode == 8 || charCode == 08 || charCode == 9 || charCode == 09) return true;
        if (parts.length > 2) return false;
        if (charCode == 46) return (parts.length == 1);
        if (parts[0].length >= 14) return false;
        if (parts.length == 2 && parts[1].length >= pres) return false;
    }

</script>

