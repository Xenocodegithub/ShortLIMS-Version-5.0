@model LIMS_DEMO.Areas.Enquiry.Models.SampleRegistrationModel
@using LIMS_DEMO.Core.DropDowns;
@{
    ViewBag.Title = "_AddCustomerDetails";
}

@using (Ajax.BeginForm("_AddCustomerDetails", "Sample", FormMethod.Post, new AjaxOptions() { HttpMethod = "Post", OnSuccess = "WorkOrderCustomerSuccess" }, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.WorkOrderID)
    @Html.HiddenFor(model => model.OVC)
    <input id="OVC" name="" type="text" style="margin-left:5px;" value="true" hidden placeholder="Lab Person Name" />
    <br/>
    <div class="form-group row">
        <label class="col-sm-12 col-md-2 col-form-label" for="inputEmail1">Customer Name: <span class="required" style="color:red">*</span></label>
        <div class="col-sm-4">
            @Html.DropDownListFor(model => model.CustomerMasterId, new SelectList(ViewBag.Customers, "CustomerMasterId", "RegistrationName"), "Please Select", new { @class = "form-control btn-sm dropdown-toggle border" })
            @Html.ValidationMessageFor(model => model.CustomerMasterId, "", new { @class = "text-danger" })
        </div>
    @*</div>
    <div class="form-group row">*@
        <label class="col-sm-12 col-md-2 col-form-label" for="inputEmail1">Sample Received Date:  <span class="required" style="color:red">*</span></label>
        <div class="col-sm-4">
            <input type="date" id="expSampleDate" class="form-control" name="WorkOrderReceivedDate" placeholder="dd/MM/yyyy" @*onblur="ValidateDate();*@" required />
            @*@Html.TextBoxFor(model => model.WorkOrderReceivedDate, new { @class = "form-control col-sm-4", @autocomplete = "false", data_format = "MM/dd/yyyy", @placeholder = "MM/dd/yyyy", onfocus = "this.value=''"})*@
            @*<span class="input-group-addon add-on">
                <i style="font-style:normal;" data-time-icon="entypo-clock" data-date-icon="entypo-calendar"></i>
                </span>*@
            @Html.ValidationMessageFor(model => model.expSampleDate, "", new { @class = "text-danger col-md-10" })
        </div>
    </div>
    <div class="form-group row">
        <label class="col-sm-12 col-md-2 col-form-label" for="inputEmail1">Sample Deliverd By: <span class="required" style="color:red">*</span></label>
        <div class="col-sm-4">
            @Html.DropDownListFor(model => model.DeliverId, new SelectList(ViewBag.Delivers, "DeliverId", "DeliverName"), "Please Select", new { @class = "form-control btn-sm dropdown-toggle border" })
            @Html.ValidationMessageFor(model => model.DeliverId, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div class="form-group row">
            <label class="col-sm-12 col-md-2 col-form-label" for="inputEmail1">Sample Deliverd By: <span class="required" style="color:red">*</span></label>
            <div class="col-md-6">
                <label><input type="radio" name="SampleCollectedBy" value="1" > Lab</label>
                <label><input type="radio" name="SampleCollectedBy" value="2" checked> Customer</label>
            </div>
        </div>*@
    <div id="divSampleCollectedBy" class="form-group row">
        <label class="col-sm-12 col-md-2 col-form-label"></label>
        <div class="col-sm-4">
            @Html.DropDownListFor(model => model.UserMasterID, new SelectList(ViewBag.CollectorName, "UserMasterID", "UserName"), "Select Deliver Person", new
            {@*@id = Model.EmployeeId,*@@class = "form-control"
})
            @Html.ValidationMessageFor(model => model.UserMasterID, "", new { @class = "text-danger" })
        </div>
        <div class="col-sm-3">
            <input id="DeliverName" name="" type="text" style="margin-left:5px;" placeholder="Lab Person Name" />
        </div>
        <div class="col-sm-3">
            <input id="Number" name="" type="text" style="margin-left:5px;" placeholder="Contact Number" />
        </div>
    </div>
    @*<div class="form-group row">
            <label class="col-sm-12 col-md-2 col-form-label" for="inputEmail1">Sample Deliverd By: <span class="required" style="color:red">*</span></label>
            <div class="col-sm-4">
                @Html.DropDownListFor(model => model.DeliverId, new SelectList(ViewBag.Delivers, "DeliverId", "DeliverName"), "Please Select", new { @class = "form-control btn-sm dropdown-toggle border" })
                @Html.ValidationMessageFor(model => model.DeliverId, "", new { @class = "text-danger" })
            </div>
        </div>*@
    @*<div class="form-group row">
            <label class="col-sm-12 col-md-2 col-form-label" for="inputEmail1"><span class="required" style="color:red"></span></label>
            <div class="col-sm-4">
                @Html.DropDownListFor(model => model.DeliverId, new SelectList(ViewBag.CollectorName, "DeliverId", "DeliverName"), "", new { @class = "form-control btn-sm dropdown-toggle border" })
                @Html.ValidationMessageFor(model => model.DeliverId, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-3">
                <input id="DeliverName" name="" type="text" style="margin-left:5px;" placeholder="Lab Person Name" />
            </div>
            <div class="col-sm-3">
                <input id="Number" name="" type="text" style="margin-left:5px;" placeholder="Contact Number" />
            </div>
        </div>*@
<div class="form-group row">
    <label class="col-sm-12 col-md-2 col-form-label" for="inputEmail1">Duration(in months):  <span class="required" style="color:red">*</span></label>
    <div class="col-sm-4">
        @Html.TextBoxFor(model => model.Duration, new { @class = "form-control", @autocomplete = "false" })
        @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger col-md-10" })
    </div>
    <label class="col-sm-12 col-md-2 col-form-label">WorkOrder No: <span class="required" style="color:red">*</span></label>
    <div class="col-sm-4">
        @Html.TextBoxFor(model => model.WorkOrderNo, new { @class = "form-control", @autocomplete = "false" })
        @Html.ValidationMessageFor(model => model.WorkOrderNo, "", new { @class = "text-danger" })
    </div>
</div>
    <div class="form-group row">
        <label class="col-sm-12 col-md-2 col-form-label" for="inputEmail1">Work Order Received On:  <span class="required" style="color:red">*</span></label>
        <div class="col-sm-4">
            <input type="date" id="WorkOrderReceivedDate" class="form-control" name="WorkOrderReceivedDate" placeholder="dd/MM/yyyy" onblur="ValidateDate100();" required />
            @*@Html.TextBoxFor(model => model.WorkOrderReceivedDate, new { @class = "form-control col-sm-4", @autocomplete = "false", data_format = "MM/dd/yyyy", @placeholder = "MM/dd/yyyy", onfocus = "this.value=''"})*@
            @*<span class="input-group-addon add-on">
                <i style="font-style:normal;" data-time-icon="entypo-clock" data-date-icon="entypo-calendar"></i>
                </span>*@
            @Html.ValidationMessageFor(model => model.WorkOrderReceivedDate, "", new { @class = "text-danger col-md-10" })

        </div>
        <label class="col-sm-12 col-md-2 col-form-label" for="inputEmail1">WorkOrder End Date:  <span class="required" style="color:red">*</span></label>
        <div class="col-sm-4">

            @Html.TextBoxFor(model => model.WOEDate, new { @class = "form-control", @placeholder = "dd/MM/yyyy", @readonly = "readonly" })
            @Html.HiddenFor(model => model.WorkOrderEndDate)
            @*<input type="date" id="WorkOrderEndDate" name="WorkOrderEndDate" class="input-group col-sm-12" placeholder="dd/MM/yyyy" onblur="ValidateDate();" />*@
            @*@Html.TextBoxFor(model => model.WorkOrderEndDate, new { @class = "form-control", @autocomplete = "false", data_format = "MM/dd/yyyy", @placeholder = "MM/dd/yyyy", @readonly = "readonly", onfocus = "this.value=''" })*@
            @*<span class="input-group-addon add-on">
                <i style="font-style:normal;" data-time-icon="entypo-clock" data-date-icon="entypo-calendar"></i>
                </span>*@

            @Html.ValidationMessageFor(model => model.WorkOrderEndDate, "", new { @class = "text-danger col-md-10" })
        </div>
    </div>
    <div class="form-group row">
        <label class="col-sm-12 col-md-3 col-form-label">Upload Work Order:</label>
        <div class="col-sm-3">
            <input id="fileInput" name="file" type="file" style="margin-left:5px;" />
        </div>
    </div>
    <div class="form-group row col-sm-12 col-md-12">
        <a class="btn btn-danger btn-sm" href="/Enquiry/Sample/SampleRegistration" style="margin-left:22px;">Back</a>
        <div class="col-sm-12 col-md-12" style="margin-top:-27px">
            <button type="submit" class="btn btn-info btn-sm" style="float:right">Save</button>
        </div>
    </div>

}
<script>
    $(document).ready(function () {
        $('#OVC').val(true);
        $('#DeliverId').click(function () {
            var inputValue = $("#DeliverId  option:selected").val();
            if (inputValue == 1)
                $('#divSampleCollectedBy').show();
            else
                $('#divSampleCollectedBy').hide();
        });
    });
    $(function () {
        $('.modeofcomm').click(function () {
            $('#ModeOfCommunicationId').val($(this).val());
        });
        if ($('#ModeOfCommunicationId').val() == '0') {
            $('.modeofcomm')[0].checked = "checked";
            $('#ModeOfCommunicationId').val($('.modeofcomm')[0].value);
        }
    });
    function ValidateDate100() {

        if ($('#WorkOrderReceivedDate').val() != "" && $('#Duration').val() != "") {
            var recieveDate = new Date($('#WorkOrderReceivedDate').val());
            var date = add_months(recieveDate, parseInt($('#Duration').val()))
            var x = ConvertDateFormat(date.toString());
            //var y = ConvertDateFormatMonthWise(date.toString());
            $("#WorkOrderEndDate").val(x);
            $("#WOEDate").val(x);
        }
        return true
    }

    function add_months(dt, n) {
        return new Date(dt.setMonth(dt.getMonth() + n));
    }

    function ConvertDateFormat(dt) {
        debugger
        var today = new Date(dt);
        var dd = today.getDate();

        var mm = today.getMonth() + 1;
        var yyyy = today.getFullYear();
        if (dd < 10) {
            dd = '0' + dd;
        }

        if (mm < 10) {
            mm = '0' + mm;
        }
        var date = dd + '/' + mm + '/' + yyyy;
        return date;
    }

    function ConvertDateFormatMonthWise(dt) {
        debugger
        var today = new Date(dt);
        var dd = today.getDate();

        var mm = today.getMonth() + 1;
        var yyyy = today.getFullYear();
        if (dd < 10) {
            dd = '0' + dd;
        }

        if (mm < 10) {
            mm = '0' + mm;
        }
        var date = mm + '/' + dd + '/' + yyyy;
        return date;
    }

</script>

<script>

    function WorkOrderCustomerSuccess(result) {
        debugger;

        if (result.status == "success") {
            debugger
            alert('Work order generated successfully.');
            $('.nav-tabs > .active').next('li').find('a').trigger('click');

            $('#second').load('/Enquiry/Sample/_AddSampleDetails?WorkOrderId=' + result.WorkOrderId);

            $("#txtwoid").val(result.WorkOrderId);
        }
        else {
            if (result.status == "Fail") {
                alert('Expected Sample Collection Date should be Between WorkOrderReceivedDate & WorkOrderEndDate !!!');
            }
            else {
                alert('Please insert values in all Mandatory fields !!!');
            }
        }
    }
    $("#UserMasterID").change(function () {
        debugger;
        $.ajax({
            url: '/Enquiry/Sample/Getuserdetails?UserMasterID=' + $("#UserMasterID  option:selected").val(),
            type: 'Get',
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            dataType: 'json',
            success: function (Data) {
                var abc = Data;
                $('#DeliverName').val(abc.Name);
                $('#Number').val(abc.No);

            },
        });
    });
</script>


